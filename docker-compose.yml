version: "3.8"

services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysql", "-uroot", "-p${MYSQL_ROOT_PASSWORD}", "-e", "SELECT 1"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    container_name: leaderboard-redis
    ports:
      - "6379:6379"
    restart: always

  backend:
    build:
      context: ./backend
    container_name: leaderboard-api
    working_dir: /app
    command: gunicorn server:app --reload -c gunicorn.conf.py --access-logfile - --error-logfile -
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/app

  celery_worker:
    build:
      context: ./backend
    container_name: leaderboard-celery
    command: celery -A app.extensions.celery worker --loglevel=info --hostname=worker1@%h --queues=default
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: leaderboard-builder
    ports:
      - '5173:5173'
    volumes:
    - ./frontend:/app
    - ./frontend/node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm install && npm run dev"

volumes:
  mysql-data:
